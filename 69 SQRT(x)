//approach : binary search
//initialize start and end equals 1 and x/2 respectivly.
//if the number is less then or equal 1 then return that number otherwise find mid and then initailize temp = mid*mid if temp and x ia equal then return mid and if x is greater then it then return mid+1 else mid - 1 and traverse to left.
class Solution 
{
    public:
    int mySqrt(int x) 
    {
        int start = 1,end = x/2,mid,sum;
        if(x<=1)
        {
            return x;
        }
        else
        {
            while(start<=end)
            {
                mid = (start+(end-start)/2);
                long temp = (long)mid*(long)mid;
                if(temp == x)
                {
                    return mid;
                }   
                if(temp < x)
                {
                    sum = mid;
                    start = mid + 1;
                }
                else
                {
                    end = mid - 1;
                }
            }
            return sum;
        }
        
    }
};
